@{
    Layout = null;
}
@using LifeManagement.Models
@model IEnumerable<Project>

<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type='text/javascript' src="@Url.Content("~/Scripts/tabs_cookies.js")"></script>


@helper TreeViewTask(IEnumerable<Task> taskTree)
{
    foreach (var item in taskTree)
    {
        if (!item.IsDeleted && item.CompletedOn == null)
        {
            if (item.ChildTasks.Count > 0)
            {
                <li class="context">
                    <input class="menuicon" type="checkbox">
                    <label class="@String.Concat("complexTask", item.Priority)">
                        @item.Name
                    </label> <input type="checkbox" id="folder" />
                    <ul>
                        @if (item.IsAddable())
                        {
                            <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.doToday, "AddToRoutine", "Task", new { id = item.Id }, null)</li>
                        }
                        <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Details, "Details", "Task", new { id = item.Id }, null) </li>
                        <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Edit, "Edit", "Task", new { id = item.Id }, null)</li>
                        <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.addSubtask, "Create", "Task", new { projectId = Guid.Empty, parentTaskId = item.Id }, null)</li>
                        <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Delete, "Delete", "Task", new { id = item.Id }, null)</li>
                    </ul>
                    <ol>
                        @TreeViewTask(item.ChildTasks)
                    </ol>
                </li>
            }
            else
            {
                <li class="context @String.Concat("Task", item.Priority)">
                    @item.Name 
                        <input class="menuicon" type="checkbox">
                        <ul>
                            @if (item.IsAddable())
                            {
                                <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.doToday, "AddToRoutine", "Task", new { id = item.Id }, null)</li>
                            }
                            <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Details, "Details", "Task", new { id = item.Id }, null) </li>
                            <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Edit, "Edit", "Task", new { id = item.Id }, null)</li>
                            <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.addSubtask, "Create", "Task", new { projectId = Guid.Empty, parentTaskId = item.Id }, null)</li>
                            <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Delete, "Delete", "Task", new { id = item.Id }, null)</li>
                        </ul>


                    
                </li>
            }
        }
    }
}

@helper TreeView(IEnumerable<Project> projectTree)
{
    foreach (var item in projectTree)
    {
        if (item.IsDeleted)
        {
            continue;
        }
        <li class="context folder">
            <input class="menuicon" type="checkbox">

            <label class="folder">
                @item.Name
            </label> <input type="checkbox" id="folder" />

            <ul>
                <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Edit, "Edit", "Project", new { id = item.Id }, null)</li>
                <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.addProject, "Create", "Project", new { parentId = item.Id }, null)</li>
                <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.addSubtask, "Create", "Task", new { projectId = item.Id, parentTaskId = Guid.Empty }, null)</li>
                <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.Delete, "Delete", "Project", new { id = item.Id }, null)</li>
            </ul>
            <ol>
                @if (item.ChildProjects.Count > 0)
                {
                    @TreeView(item.ChildProjects)
                }
                @if (item.Tasks.Count(t => t.ParentTaskId.Equals(null)) > 0)
                {
                    @TreeViewTask(item.Tasks.Where(t => t.ParentTaskId.Equals(null)));
                }
            </ol>


        </li>
    }
}

<div class="section">
    <ul class="tabs">
        <li class="current">@LifeManagement.Resources.ResourceScr.Projects</li>
        <li>Напоминания</li>
    </ul>
    <div class="box visible">
        <ol class="tree">
            <li>@Html.ActionLink(LifeManagement.Resources.ResourceScr.addProject, "Create", "Project")</li>
            @TreeView(Model)
        </ol>


    </div>
    <div class="box">
        Перечень напоминаний
    </div>
</div>