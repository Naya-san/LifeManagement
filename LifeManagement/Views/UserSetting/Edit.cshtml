@using System.Web.Mvc.Html5
@using LifeManagement.Extensions
@using LifeManagement.Resources
@model LifeManagement.Models.DB.UserSetting

<h4>@ResourceScr.ComplexitySettings</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontalLM">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)


        <div class="form-group">
            @Html.Label(ResourceScr.Low, new { @class = "control-label LMсol-md-3" })
            <div class="LMсol-md-9 forma">
                @Html.Html5EditorFor(model => model.ComplexityLowFrom, InputTypes.InputType.Text, htmlAttributes: new { @required = "true", @class = "short", @readonly = "readonly" }) - 
                @Html.Html5EditorFor(model => model.ComplexityLowTo, InputTypes.InputType.Text, htmlAttributes: new { @required = "true", @class = " short", @readonly = "readonly" })
                <div class="sliderLong" id="slider-rangeLow" data-start-value-from="@Model.ComplexityLowFrom.TotalMinutes" data-start-value-to="@Model.ComplexityLowTo.TotalMinutes"></div>
                @Html.ValidationMessageFor(model => model.ComplexityLowFrom)
            </div>
        </div>

        <div class="form-group">
            @Html.Label(ResourceScr.Medium, new { @class = "control-label LMсol-md-3" })
            <div class="LMсol-md-9 forma">
                @Html.Html5EditorFor(model => model.ComplexityLowTo, InputTypes.InputType.Text, htmlAttributes: new { @required = "true", @class = " short", @readonly = "readonly" }) - 
                @Html.Html5EditorFor(model => model.ComplexityMediumTo, InputTypes.InputType.Text, htmlAttributes: new { @required = "true", @class = " short", @readonly = "readonly" })
                <div class="sliderLong" id="slider-rangeMedium" data-start-value-from="@(Model.ComplexityLowTo.TotalMinutes+1)" data-start-value-to="@Model.ComplexityMediumTo.TotalMinutes"></div>
                @Html.ValidationMessageFor(model => model.ComplexityMediumTo)
            </div>
        </div>

        <div class="form-group">
            @Html.Label(ResourceScr.High, new {@class = "control-label LMсol-md-3"})
            <div class="LMсol-md-9 forma">
                @Html.Html5EditorFor(model => model.ComplexityMediumTo, InputTypes.InputType.Text, htmlAttributes: new { @required = "true", @class = " short", @readonly = "readonly" }) -
                @Html.Html5EditorFor(model => model.ComplexityHightTo, InputTypes.InputType.Text, htmlAttributes: new { @required = "true", @class = " short", @readonly = "readonly" })
                <div class="sliderLong" id="slider-rangeHight" data-start-value-from="@(Model.ComplexityMediumTo.TotalMinutes+1)" data-start-value-to="@Model.ComplexityHightTo.TotalMinutes"></div>
                @Html.ValidationMessageFor(model => model.ComplexityHightTo)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WorkingTime, new {@class = "control-label LMсol-md-3"})
            <div class="LMсol-md-9 forma">
                @Html.Html5EditorFor(model => model.WorkingTime, InputTypes.InputType.Text, htmlAttributes: new
                {
                    @required = "true", @class = " short", @readonly = "readonly",
                    @value = @Model.WorkingTime.Hours + ":" + @Model.WorkingTime.Minutes
                })
                <br/>
                <div class="sliderLong" id="sliderWorking" data-start-value="@Model.WorkingTime.TotalMinutes"></div>
                <br />
                @Html.ValidationMessageFor(model => model.WorkingTime)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ParallelismPercentage, new { @class = "control-label LMсol-md-3" })
            <div class="LMсol-md-9 forma">
                @Html.Html5EditorFor(model => model.ParallelismPercentage, InputTypes.InputType.Text, htmlAttributes: new {@required = "true", @class = "Percentage short", @readonly = "readonly" })%
                <br />
                <div class="sliderPercentage sliderLong" data-start-value="@Model.ParallelismPercentage"></div>
                <br />
                @Html.ValidationMessageFor(model => model.ParallelismPercentage)
            </div>
        </div>

        <div class="buttonbar">

            <input type="submit" value="@ResourceScr.save" class="btn btn-default halfsize" />
            @Html.DialogFormLink(ResourceScr.Delete, "btn btn-default halfsize", Url.Action("ToDefault", "UserSetting", new { id = Model.Id }), ResourceScr.Delete, "", "", 700)
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
